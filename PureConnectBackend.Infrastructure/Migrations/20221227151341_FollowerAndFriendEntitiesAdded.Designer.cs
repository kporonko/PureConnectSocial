// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PureConnectBackend.Infrastructure.Data;

#nullable disable

namespace PureConnectBackend.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20221227151341_FollowerAndFriendEntitiesAdded")]
    partial class FollowerAndFriendEntitiesAdded
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PureConnectBackend.Infrastructure.Models.Follower", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("RequestDate")
                        .HasColumnType("date")
                        .HasColumnName("RequestDate");

                    b.Property<int>("TargetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TargetId");

                    b.HasKey("Id");

                    b.HasIndex("TargetId");

                    b.ToTable("Follower", (string)null);
                });

            modelBuilder.Entity("PureConnectBackend.Infrastructure.Models.Friend", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("FriendshipDateStart")
                        .HasColumnType("date")
                        .HasColumnName("FriendshipDateStart");

                    b.Property<int>("TargetId")
                        .HasMaxLength(50)
                        .HasColumnType("int")
                        .HasColumnName("TargetId");

                    b.HasKey("Id");

                    b.HasIndex("TargetId");

                    b.ToTable("Friend", (string)null);
                });

            modelBuilder.Entity("PureConnectBackend.Infrastructure.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Avatar")
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Avatar");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("date")
                        .HasColumnName("BirthDate");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar")
                        .HasColumnName("Email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar")
                        .HasColumnName("FirstName");

                    b.Property<bool>("IsOpenAcc")
                        .HasColumnType("bit")
                        .HasColumnName("IsOpenAcc");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar")
                        .HasColumnName("LastName");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Location");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Password");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Role");

                    b.Property<string>("Status")
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Status");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("varchar(max)")
                        .HasColumnName("UserName");

                    b.HasKey("Id");

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("PureConnectBackend.Infrastructure.Models.Follower", b =>
                {
                    b.HasOne("PureConnectBackend.Infrastructure.Models.User", "User")
                        .WithMany("Followers")
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("PureConnectBackend.Infrastructure.Models.Friend", b =>
                {
                    b.HasOne("PureConnectBackend.Infrastructure.Models.User", "User")
                        .WithMany("Friends")
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("PureConnectBackend.Infrastructure.Models.User", b =>
                {
                    b.Navigation("Followers");

                    b.Navigation("Friends");
                });
#pragma warning restore 612, 618
        }
    }
}
